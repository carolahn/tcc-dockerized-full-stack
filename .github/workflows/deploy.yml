name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Build and push Docker images
        run: |
            cd client
            docker build -t ${{ secrets.DOCKERHUB_CLIENT_URL }}:latest .
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker push ${{ secrets.DOCKERHUB_CLIENT_URL }}:latest
            cd ../server
            docker build -t ${{ secrets.DOCKERHUB_SERVER_URL }}:latest .
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker push ${{ secrets.DOCKERHUB_SERVER_URL }}:latest
      - name: Install docker on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_PEM }}
          script: |
            sudo su
            sudo apt-get update
            yes | sudo apt-get install docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            sudo usermod -aG docker ubuntu
            exec bash
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_PEM }}
          script: |
            sudo su
            sudo docker pull ${{ secrets.DOCKERHUB_CLIENT_URL }}:latest
            sudo docker stop my-node-app || true
            sudo docker rm my-node-app || true
            sudo docker run -d -p 3000:3000 --name my-node-app ${{ secrets.DOCKERHUB_CLIENT_URL }}:latest
          